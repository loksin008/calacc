import tkinter as tk

class CarAnimation(tk.Tk):
    def __init__(self):
        super().__init__()

        self.title("Running Shiny Yellow Car Animation")
        self.geometry("800x400")
        self.configure(bg="white")

        # Create a canvas
        self.canvas = tk.Canvas(self, width=800, height=400, bg="white")
        self.canvas.pack()

        # Draw a shiny yellow car as a rectangle
        self.car_width = 120
        self.car_height = 60
        self.car = self.canvas.create_rectangle(0, 200, self.car_width, 200 - self.car_height, fill="#FFD700", outline="black", width=2)

        # Draw the wheels as circles
        self.wheel1 = self.canvas.create_oval(20, 200 - 15, 40, 200 - 5, fill="black")
        self.wheel2 = self.canvas.create_oval(80, 200 - 15, 100, 200 - 5, fill="black")

        # Start the animation
        self.move_car()

    def move_car(self):
        # Move the car to the right
        self.canvas.move(self.car, 5, 0)  # Move by 5 pixels to the right
        self.canvas.move(self.wheel1, 5, 0)  # Move wheels with the car
        self.canvas.move(self.wheel2, 5, 0)

        car_coords = self.canvas.coords(self.car)

        # Check if the car has moved off the screen
        if car_coords[2] < 800:  # If the right side of the car is less than the canvas width
            self.after(50, self.move_car)  # Continue moving
        else:
            # Reset the car's position to the left side of the canvas
            self.canvas.move(self.car, -800, 0)  # Move back to the left side
            self.canvas.move(self.wheel1, -800, 0)  # Reset wheels position
            self.canvas.move(self.wheel2, -800, 0)  # Reset wheels position
            self.after(50, self.move_car)  # Continue moving

if __name__ == "__main__":
    app = CarAnimation()
    app.mainloop()
